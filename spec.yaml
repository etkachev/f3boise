name: f3boiseapi
# Check https://www.digitalocean.com/docs/app-platform/#regional-availability
# for a list of all the available options.
# You can get region slugs from
# https://www.digitalocean.com/docs/platform/availability-matrix/
# They must bt specified lowercased.
# `sfo3` stands for SF
region: sfo3
services:
  - name: f3boiseapi
    # Relative to the repository root
    dockerfile_path: Dockerfile
    source_dir: .
    github:
      # Depending on when you created the repository,
      # the default branch on GitHub might have been named `master`
      branch: master
      # Deploy a new version on every commit to `master`!
      # Continuous Deployment, here we come!
      deploy_on_push: true
      # !!! Fill in with your details
      # e.g. LukeMathWalker/zero-to-production
      repo: etkachev/f3boise
    # Active probe used by DigitalOcean's to ensure our application is healthy
    health_check:
      # The path to our health check endpoint!
      # It turned out to be useful in the end!
      http_path: /health_check
    # The port the application will be listening on for incoming requests
    # It should match what we specified in our configuration/production.yaml file!
    http_port: 8080
    # For production workloads we'd go for at least two!
    # But let's try to keep the bill under control for now...
    instance_count: 1
    instance_size_slug: basic-xxs
    # All incoming requests should be routed to our app
    routes:
      - path: /
    envs:
      - key: SLACK_CLIENT_ID
        scope: RUN_AND_BUILD_TIME
        type: SECRET
        value: EV[1:pNhjC7V6V6N18o3boUhwgIk9bSrDddRg:1vBuqCNtB7yjgc+2LWioD+wPc+XFFKF2fAAAtRiBDqMqgkC1JHhtKbZQUg==]
      - key: SLACK_CLIENT_SECRET
        scope: RUN_AND_BUILD_TIME
        type: SECRET
        value: EV[1:EHtkMctw+QGxq7ZjaU4+3Gdp0HC8j4dM:SdmC9MBudJpCyUc9szTHTNeTwd7KTZO6EWh7/Eav5P4FhOwZMNTSD92uNRbMvoWb]
      - key: SLACK_SIGNING_SECRET
        scope: RUN_AND_BUILD_TIME
        type: SECRET
        value: EV[1:gTWMU78QWOASpbLKiNKqBef8NEcOmykm:uzinDEhotWTKlV5sv8ptrKaEHorsm1aMVV9ZgK+QcCB6m2TDRpgXJMA8iy5EruNK]
      - key: BOT_OAUTH_TOKEN
        scope: RUN_AND_BUILD_TIME
        type: SECRET
        value: EV[1:YREWToa7rv15Q0RbNWYEkvWBklx/ZP3D:CKEOaayUl8o70CKce3NjPoWjELC3yW0Q2HZiojYTJIvKL7SScZeT8IkjEZylIssMCbdUWKawCw4vMIm93YuWyEWlTho4ArVU8w==]
      - key: DEPRECATED_VERIFY_TOKEN
        scope: RUN_AND_BUILD_TIME
        type: SECRET
        value: EV[1:DDg2hU900qkVcVv2XiJD3iGU3StotMvk:3axMCWJFKG9g5zrLIHuCImxPwEeBt/ezNFNIl5/dcQ9UKt9OcxVohg==]
      - key: APP_DATABASE__USERNAME
        scope: RUN_TIME
        value: ${f3boise.USERNAME}
      - key: APP_DATABASE__PASSWORD
        scope: RUN_TIME
        value: ${f3boise.PASSWORD}
      - key: APP_DATABASE__HOST
        scope: RUN_TIME
        value: ${f3boise.HOSTNAME}
      - key: APP_DATABASE__PORT
        scope: RUN_TIME
        value: ${f3boise.PORT}
      - key: APP_DATABASE__DATABASE_NAME
        scope: RUN_TIME
        value: ${f3boise.DATABASE}
databases:
  # PG = Postgres
  - engine: PG
    # Database name
    name: f3boise
    # Again, let's keep the bill lean
    num_nodes: 1
    size: db-s-dev-database
    # Postgres version - using the latest here
    version: "12"
